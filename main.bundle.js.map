{"version":3,"sources":["/home/travis/build/HarmoWatch/ngx-redux-core/src/$_lazy_route_resource lazy","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/common/module.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/index.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/module.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/reducer/reducer.provider.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/registry.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/select/decorator.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/select/pipe.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/select/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/selector/selector.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/state/definition/token.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/state/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/state/state.provider.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/store/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/store/token.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/testing/module.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/testing/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/testing/store.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/environments/environment.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/example-app/app.component.css","/home/travis/build/HarmoWatch/ngx-redux-core/src/example-app/app.component.html","/home/travis/build/HarmoWatch/ngx-redux-core/src/example-app/app.component.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/example-app/app.module.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./todo/todo.module\": [\n\t\t\"../../../../../src/example-app/todo/todo.module.ts\",\n\t\t\"todo.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\n\nimport { ReduxSelectPipe } from '../select/pipe';\n\n@NgModule({\n  declarations: [\n    ReduxSelectPipe,\n  ],\n  exports: [\n    ReduxSelectPipe,\n  ],\n})\nexport class ReduxCommonModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/common/module.ts","import {\n  ReduxActionContextDecorator,\n  ReduxActionDecorator,\n  ReduxActionDispatcher,\n  ReduxReducerDecorator\n} from '@harmowatch/redux-decorators';\nimport { Action } from 'redux';\n\nexport * from './module/public_api';\nexport * from './select/public_api';\nexport * from './state/public_api';\nexport * from './store/public_api';\nexport * from './testing/public_api';\nexport * from './selector/selector';\nexport * from './state/state.provider';\nexport * from './module';\n\nexport {\n  ReduxActionFunction,\n  ReduxReducerType,\n  ReduxStateType as ReduxStateProviderType\n} from '@harmowatch/redux-decorators';\n\nexport const ReduxAction = ReduxActionDecorator.forMethod;\nexport const ReduxActionContext = ReduxActionContextDecorator.forClass;\nexport const getActionType = ReduxActionDispatcher.getType;\n\nexport const ReduxReducer = ReduxReducerDecorator.forMethod;\n\nexport interface ActionWithPayload<P = void> extends Action {\n  type: string;\n  payload?: P;\n}\n\n/**\n * interface doesn't work @see https://github.com/angular/angular-cli/issues/2034#issuecomment-302666897 :/\n * @deprecated Please use ActionWithPayload instead\n */\nexport class ActionInterface<P = void> {\n  type: string;\n  payload?: P;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/index.ts","import { CommonModule } from '@angular/common';\nimport { Inject, Injector, isDevMode, ModuleWithProviders, NgModule, Optional } from '@angular/core';\nimport { createStore, Store, StoreEnhancer, StoreEnhancerStoreCreator } from 'redux';\nimport { ReduxCommonModule } from './common/module';\n\nimport { ReducerProvider } from './reducer/reducer.provider';\nimport { ReduxModuleChildConfig } from './module/child/config';\nimport { ReduxModuleRootConfig } from './module/root/config';\nimport { Registry } from './registry';\nimport { StateDefinition } from './state/definition';\nimport { StateDefToken } from './state/definition/token';\nimport { ReduxStore } from './store/token';\n\n@NgModule({\n  exports: [\n    ReduxCommonModule,\n  ],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class ReduxRootModule {\n\n  constructor(@Inject(ReduxStore) store: Store<{}> = null,\n              private reducer: ReducerProvider,\n              private injector: Injector,\n              @Optional() @Inject(StateDefToken) stateDefs: StateDefinition[] = []) {\n\n    Registry.registerStore(store);\n\n    stateDefs\n      .filter(def => def && def.provider)\n      .map(def => this.injector.get(def.provider))\n      .forEach(provider => this.reducer.addStateProvider(provider));\n  }\n\n}\n\n@NgModule({\n  exports: [\n    ReduxCommonModule,\n  ],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class ReduxModule {\n\n  constructor(@Optional() @Inject(StateDefToken) stateDefs: StateDefinition[] = [],\n              private reducer: ReducerProvider,\n              private injector: Injector) {\n\n    stateDefs\n      .filter(def => def && def.provider)\n      .map(def => this.injector.get(def.provider))\n      .forEach(provider => this.reducer.addStateProvider(provider));\n  }\n\n  public static forChild(config: ReduxModuleChildConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: ReduxModule,\n      providers: [\n        {provide: StateDefToken, useValue: config.state || null, multi: true},\n      ],\n    };\n  }\n\n  public static forRoot(config: ReduxModuleRootConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: ReduxRootModule,\n      providers: [\n        ReducerProvider,\n        {\n          provide: ReduxStore,\n          useFactory: config.storeFactory || ReduxModule.defaultStoreFactory,\n          deps: [ ReducerProvider ]\n        },\n        {provide: StateDefToken, useValue: config.state || null, multi: true},\n      ],\n    };\n  }\n\n  public static defaultStoreFactory(reducer: ReducerProvider): Store<{}> {\n    return createStore(\n      reducer.reduce.bind(reducer),\n      {},\n      ReduxModule.defaultEnhancerFactory(),\n    );\n  }\n\n  public static defaultEnhancerFactory(): StoreEnhancer<{}> {\n    if (console && window[ '__REDUX_DEVTOOLS_EXTENSION__' ] && isDevMode()) {\n      return window[ '__REDUX_DEVTOOLS_EXTENSION__' ]();\n    }\n\n    return ReduxModule.noopEnhancer;\n  }\n\n  public static noopEnhancer(next: StoreEnhancerStoreCreator<{}>): StoreEnhancerStoreCreator<{}> {\n    return next;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/module.ts","import { Injectable } from '@angular/core';\n\nimport { ActionWithPayload, ReduxRootState } from '../index';\nimport { IRegisterStatePayload, Registry } from '../registry';\nimport { ReduxStateProvider } from '../state/state.provider';\n\n@Injectable()\nexport class ReducerProvider {\n\n  private stateProviders: {\n    [name: string]: ReduxStateProvider<{}>,\n  } = {};\n\n  public addStateProvider(provider: ReduxStateProvider<{}>) {\n    if (!this.stateProviders[ provider.name ]) {\n      Registry.registerState(provider);\n      this.stateProviders[ provider.name ] = provider;\n    }\n  }\n\n  public reduce(rootState: ReduxRootState, action: ActionWithPayload<any>): ReduxRootState {\n\n    if (action.type === Registry.ACTION_REGISTER_STATE) {\n      const regAction = (action as {} as ActionWithPayload<IRegisterStatePayload>);\n\n      return {\n        ...rootState,\n        [ regAction.payload.name ]: regAction.payload.initialValue,\n      };\n    }\n\n    return Object.values(this.stateProviders).reduce((stateToReduce, provider) => {\n      return Object.assign({}, stateToReduce, {\n        [ provider.name ]: provider.reduce(stateToReduce[ provider.name ], action),\n      });\n    }, rootState);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/reducer/reducer.provider.ts","import 'rxjs/add/operator/toPromise';\n\nimport {\n  ReduxActionDispatcher,\n  ReduxActionFunction,\n  ReduxStateDecorator,\n  ReduxStateInterface\n} from '@harmowatch/redux-decorators';\n\nimport { Action, Reducer, Store } from 'redux';\nimport { AsyncSubject } from 'rxjs/AsyncSubject';\nimport { Observable } from 'rxjs/Observable';\n\nimport { ActionWithPayload } from './';\n\nexport class RegistryReducerItem {\n  stateName: string;\n  reducer: Reducer<{}>;\n  type: ReduxActionFunction<{}>;\n}\n\nexport interface IRegisterStatePayload {\n  initialValue: {};\n  name: string;\n}\n\nexport class Registry {\n\n  public static readonly ACTION_REGISTER_STATE = `@harmowatch/ngx-redux-core/registerState`;\n\n  private static _store = new AsyncSubject<Store<{}>>();\n  private static _reducers: RegistryReducerItem[] = [];\n\n  public static reset() {\n    Registry._store = new AsyncSubject<Store<{}>>();\n    Registry._reducers = [];\n  }\n\n  public static registerStore(store: Store<{}>) {\n    Registry.reset();\n    Registry._store.next(store);\n    Registry._store.complete();\n\n    ReduxActionDispatcher.dispatchedActions.subscribe(action => {\n      store.dispatch(action as Action);\n    });\n  }\n\n  public static registerState(state: ReduxStateInterface<{}>) {\n    Registry.getStore().then((store) => {\n\n      const stateConfig = ReduxStateDecorator.get(state.constructor);\n      const initState = state.getInitialState();\n      let initStateToResolve = initState;\n\n      if (initState instanceof Observable) {\n        initStateToResolve = initState.toPromise();\n      }\n\n      Promise.resolve(initStateToResolve).then(initialState => {\n        store.dispatch<ActionWithPayload<IRegisterStatePayload>>({\n          payload: {\n            initialValue: initialState,\n            name: stateConfig.name,\n          },\n          type: Registry.ACTION_REGISTER_STATE,\n        });\n      });\n\n    });\n  }\n\n  public static getStore(): Promise<Store<{}>> {\n    return new Promise(Registry._store.subscribe.bind(Registry._store));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/registry.ts","import { Injector } from '@angular/core';\nimport { ReduxStateDecorator, ReduxStateType } from '@harmowatch/redux-decorators';\n\nimport { ReduxStateProvider } from '../state/state.provider';\n\nexport function ReduxSelect<S = {}>(expression: string,\n                                    context?: ReduxStateType<ReduxStateProvider<{}>>): PropertyDecorator {\n\n  return (target: {}, propertyKey: string) => {\n    const originalOnInit = target[ 'ngOnInit' ];\n\n    Object.defineProperty(target, 'ngOnInit', {\n      value: function (injector: Injector) {\n\n        const stateName = ReduxStateDecorator.get(context).name;\n\n        Object.defineProperty(target, propertyKey, {\n          value: ReduxStateProvider.instancesByName[ stateName ].select(expression)\n        });\n\n        if (originalOnInit) {\n          originalOnInit.apply(target, arguments);\n        }\n      }\n    });\n\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/select/decorator.ts","import 'rxjs/add/operator/distinctUntilChanged';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Inject, Injector, Pipe, PipeTransform } from '@angular/core';\n\nimport { ReduxStateProvider } from '../state/state.provider';\nimport { StateDefinition } from '../state/definition';\nimport { StateDefToken } from '../state/definition/token';\n\n@Pipe({name: 'reduxSelect'})\nexport class ReduxSelectPipe implements PipeTransform {\n\n  private provider: ReduxStateProvider<{}>;\n\n  constructor(@Inject(StateDefToken) stateDefs: StateDefinition[] = [], injector: Injector) {\n    this.provider = injector.get(stateDefs[ 0 ].provider) as ReduxStateProvider<{}>;\n  }\n\n  transform(selector: string): Observable<{}> {\n    return this.provider.select(selector);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/select/pipe.ts","export * from './pipe';\nexport {ReduxSelect} from './decorator';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/select/public_api.ts","import 'rxjs/add/operator/map';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { ReduxStateDecorator, ReduxStateType } from '@harmowatch/redux-decorators';\n\nimport { ReduxStateProvider } from '../state/state.provider';\nimport { ReduxRootState } from '../module/root/state';\nimport { Registry } from '../registry';\n\nexport class ReduxSelector<T> extends ReplaySubject<T> {\n\n  private static readonly DELIMITER = '/';\n\n  constructor(selector = '/',\n              stateProvider?: ReduxStateType<ReduxStateProvider<{}>>) {\n\n    if (!selector.startsWith(ReduxSelector.DELIMITER) && !stateProvider) {\n      throw new Error('You need to provide a state provider, if you use relative selectors');\n    }\n\n    super(1);\n\n    Registry.getStore().then(store => {\n      const next = () => {\n        this.next(ReduxSelector.getValueByState(store.getState(), selector, stateProvider));\n      };\n\n      store.subscribe(() => next());\n      next(); // we need to trigger a initial value, otherwise we've to wait until the first state change\n    });\n\n  }\n\n  public static normalize(selector: string, stateProvider?: ReduxStateType): string {\n    if (!selector.startsWith(ReduxSelector.DELIMITER)) {\n      return `/${ReduxStateDecorator.get(stateProvider).name}/${selector}`;\n    }\n\n    return selector;\n  }\n\n  public static getValueByState<S>(state: ReduxRootState<S>, selector: string, stateProvider?: ReduxStateType): S {\n    /* save the return value in a constant to prevent\n     * \"Metadata collected contains an error that will be reported at runtime: Lambda not supported.\"\n     * error\n     */\n    const value: S = ReduxSelector.normalize(selector, stateProvider).split(ReduxSelector.DELIMITER)\n      .filter(propertyKey => propertyKey !== '')\n      .reduce((previousValue, propertyKey) => {\n        if (!previousValue || !previousValue.hasOwnProperty(propertyKey)) {\n          return null;\n        }\n\n        return previousValue[ propertyKey ];\n      }, state as {});\n\n    return value;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/selector/selector.ts","import { InjectionToken } from '@angular/core';\nimport { Store } from 'redux';\n\nexport class StateDefToken extends InjectionToken<Store<{}>> {\n\n  constructor() {\n    super('StateDefToken');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/state/definition/token.ts","import { ReduxStateDecorator } from '@harmowatch/redux-decorators';\n\nexport * from './constructor';\nexport * from './definition';\n\nexport const ReduxState = ReduxStateDecorator.forClass;\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/state/public_api.ts","import 'rxjs/add/operator/distinctUntilChanged';\n\nimport { Inject } from '@angular/core';\nimport {\n  ReduxReducerDecorator,\n  ReduxStateDecorator,\n  ReduxStateInterface,\n  ReduxStateType\n} from '@harmowatch/redux-decorators';\n\nimport { ActionWithPayload, getActionType } from '../';\nimport { ReduxSelector } from '../selector/selector';\nimport { StateDefinition } from '../state/definition';\nimport { StateDefToken } from '../state/definition/token';\nimport { Observable } from 'rxjs/Observable';\n\nexport abstract class ReduxStateProvider<S> implements ReduxStateInterface<S> {\n\n  public static instancesByName: { [stateName: string]: ReduxStateProvider<{}> } = {};\n\n  public readonly name: string;\n  public readonly stateDef: StateDefinition;\n\n  protected selectorCache: { [selector: string]: Observable<{}> } = {};\n  protected reducerMethodsByType: { [actionType: string]: Function[] };\n\n  constructor(@Inject(StateDefToken) stateDefs: StateDefinition[] = []) {\n\n    const {name = null} = ReduxStateDecorator.get(this.constructor) || {};\n\n    if (!name) {\n      throw new Error(\n        'Unable to resolve state name! Make sure you\\'ve decorated the provider by \"@ReduxState\"!'\n      );\n    }\n\n    this.name = ReduxStateDecorator.get(this.constructor).name;\n    this.stateDef = stateDefs.find(def => ReduxStateDecorator.get(def.provider).name === name);\n\n    if (!this.stateDef) {\n      throw new Error(\n        'Unable to resolve state definition! Make sure you\\'ve registered the provider to ReduxModule!'\n      );\n    }\n\n    this.reducerMethodsByType = (this.stateDef.reducers || [])\n      .map(clazz => this.getReducerMethods(new clazz()))\n      .reduce((all, curr) => [].concat(curr, all), []) // [].concat keeps the order, all.concat(curr) destroys the order\n      // .reduce((all, curr) => [curr, ...all], []) // [].concat keeps the order, all.concat(curr) destroys the order\n      .reduce((methodsByType, reducer) => {\n        const type = getActionType(reducer.type);\n\n        return {\n          ...methodsByType,\n          [ type ]: [ reducer.method ].concat(methodsByType[ type ] || [])\n        };\n      }, {});\n\n    ReduxStateProvider.instancesByName[ this.name ] = this;\n  }\n\n  getInitialState(): S | Promise<S> | Observable<S> {\n    throw new Error('Method \"getInitialState\" not implemented.');\n  }\n\n  select<T>(selector = ''): Observable<T> {\n\n    const stateType = this.constructor as ReduxStateType<ReduxStateProvider<S>>;\n    selector = ReduxSelector.normalize(selector, stateType);\n\n    if (!this.selectorCache[ selector ]) {\n      this.selectorCache[ selector ] = new ReduxSelector<T>(selector, stateType).distinctUntilChanged();\n    }\n\n    return this.selectorCache[ selector ] as ReduxSelector<T>;\n  }\n\n  reduce<P>(state: S, action: ActionWithPayload<P>) {\n    const reducerMethods = this.reducerMethodsByType[ action.type ] || [];\n    return reducerMethods.reduce((stateToReduce, method) => method(stateToReduce, action), state);\n  }\n\n  private getReducerMethods(reducerClassInstance: any) {\n    return Object.values(Object.getPrototypeOf(reducerClassInstance))\n      .map(method => {\n        return {\n          method: (method as Function).bind(reducerClassInstance),\n          type: ReduxReducerDecorator.get(method),\n        };\n      })\n      .filter(type => type != null)\n      // convert array of types to multiple method entries\n      .reduce((all, curr) => all.concat([].concat(curr.type).map(type => ({...curr, type}))), []);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/state/state.provider.ts","export * from './token';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/store/public_api.ts","import { InjectionToken } from '@angular/core';\nimport { Store } from 'redux';\n\nexport class ReduxStore extends InjectionToken<Store<{}>> {\n\n  constructor() {\n    super('ReduxStore');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/store/token.ts","import { CommonModule } from '@angular/common';\nimport { Inject, ModuleWithProviders, NgModule, Optional } from '@angular/core';\nimport { ReduxCommonModule } from '../common/module';\nimport { Registry } from '../registry';\nimport { ReduxTestingStore } from './store';\nimport { ReduxModuleRootConfig } from '../module/root/config';\nimport { StateDefToken } from '../state/definition/token';\nimport { Store } from 'redux';\n\n@NgModule({\n  exports: [\n    ReduxCommonModule,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    ReduxTestingStore,\n  ],\n})\nexport class ReduxTestingModule {\n\n  constructor(@Optional() @Inject(ReduxTestingStore) store: Store<{}> = null) {\n    if (store) {\n      Registry.reset();\n      Registry.registerStore(store);\n    }\n  }\n\n  public static forRoot(config: ReduxModuleRootConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: ReduxTestingModule,\n      providers: [\n        {provide: ReduxTestingStore, useFactory: config.storeFactory || ReduxTestingModule.defaultStoreFactory},\n        {provide: StateDefToken, useValue: config.state || null, multi: true},\n      ],\n    };\n  }\n\n  public static defaultStoreFactory(): Store<{}> {\n    return new ReduxTestingStore();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/testing/module.ts","export * from './module';\nexport * from './store';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/testing/public_api.ts","import { Injectable } from '@angular/core';\nimport { ReduxStateDecorator } from '@harmowatch/redux-decorators';\nimport { Action, Store, Unsubscribe } from 'redux';\nimport 'rxjs/add/operator/takeWhile';\nimport 'rxjs/add/operator/toPromise';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ReduxRootState } from '../module/root/state';\nimport { StateConstructor } from '../state/constructor';\n\n@Injectable()\nexport class ReduxTestingStore implements Store<{}> {\n\n  private state = new BehaviorSubject(null);\n\n  public setState<S>(state: StateConstructor, value: S): Promise<ReduxRootState> {\n    const {name} = ReduxStateDecorator.get(state);\n\n    const nextState = Object.assign({}, this.state.getValue(), {\n      [name]: value,\n    });\n\n    this.state.next(nextState);\n\n    return this.state\n      .takeWhile(currentState => currentState !== nextState)\n      .toPromise().then(() => this.state.getValue());\n  }\n\n  public getState(): {} {\n    return this.state.getValue();\n  }\n\n  public subscribe(listener: () => void): Unsubscribe {\n    return this.state.subscribe.call(this.state, listener);\n  }\n\n  public replaceReducer() {\n  }\n\n  public dispatch<T extends Action>(action: T): T {\n    return action;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/@harmowatch/ngx-redux-core/testing/store.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/example-app/app.component.css\n// module id = ../../../../../src/example-app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/example-app/app.component.html\n// module id = ../../../../../src/example-app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent {\n  title = 'app';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/example-app/app.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { ReduxModule } from '@harmowatch/ngx-redux-core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReduxModule.forRoot(),\n    RouterModule.forRoot([\n      {path: 'todo', loadChildren: './todo/todo.module#TodoModule'},\n      {path: '', redirectTo: 'todo', pathMatch: 'prefix'},\n    ], {useHash: true})\n  ],\n  exports: [\n    AppComponent,\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/example-app/app.module.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './example-app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/main.ts"],"sourceRoot":"webpack:///"}