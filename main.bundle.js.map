{"version":3,"sources":["/home/travis/build/HarmoWatch/ngx-redux-core/src/$_lazy_route_resource lazy","/home/travis/build/HarmoWatch/ngx-redux-core/src/app/app.component.css","/home/travis/build/HarmoWatch/ngx-redux-core/src/app/app.component.html","/home/travis/build/HarmoWatch/ngx-redux-core/src/app/app.component.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/app/app.module.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/environments/environment.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/main.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/common/module.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/module.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/module/root/reducer.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/registry.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/select/pipe.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/selector.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/selector/cache/selector-cache-factory.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/state/definition/manager.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/state/definition/token.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/store/token.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./todo/todo.module\": [\n\t\t\"../../../../../src/app/todo/todo.module.ts\",\n\t\t\"todo.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent {\n  title = 'app';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { ReduxModule } from '../ngx-redux/module';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReduxModule.forRoot(),\n    RouterModule.forRoot([\n      {path: 'todo', loadChildren: './todo/todo.module#TodoModule'},\n      {path: '', redirectTo: 'todo', pathMatch: 'prefix'},\n    ])\n  ],\n  exports: [\n    AppComponent,\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/main.ts","import { NgModule } from '@angular/core';\n\nimport { ReduxSelectPipe } from '../select/pipe';\n\n@NgModule({\n  declarations: [\n    ReduxSelectPipe,\n  ],\n  exports: [\n    ReduxSelectPipe,\n  ],\n})\nexport class ReduxCommonModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/common/module.ts","import { CommonModule } from '@angular/common';\nimport { Inject, isDevMode, ModuleWithProviders, NgModule, Optional } from '@angular/core';\nimport { createStore, Store, StoreEnhancer, StoreEnhancerStoreCreator } from 'redux';\nimport { ReduxCommonModule } from './common/module';\n\nimport { ReduxModuleChildConfig } from './module/child/config';\nimport { ReduxModuleRootConfig } from './module/root/config';\nimport { ReduxModuleRootReducer } from './module/root/reducer';\nimport { Registry } from './registry';\nimport { StateDefinition } from './state/definition';\nimport { StateDefinitionManager } from './state/definition/manager';\nimport { StateDefToken } from './state/definition/token';\nimport { ReduxStore } from './store/token';\n\n@NgModule({\n  exports: [\n    ReduxCommonModule,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    StateDefinitionManager,\n  ]\n})\nexport class ReduxRootModule {\n\n  constructor(@Inject(ReduxStore) store: Store<{}> = null,\n              private stateDefinitionManager: StateDefinitionManager,\n              @Optional() @Inject(StateDefToken) stateDefs: StateDefinition[] = []) {\n    Registry.registerStore(store);\n    this.stateDefinitionManager.add(stateDefs);\n  }\n\n}\n\n@NgModule({\n  exports: [\n    ReduxCommonModule,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    StateDefinitionManager,\n  ]\n})\nexport class ReduxModule {\n\n  constructor(@Optional() @Inject(StateDefToken) stateDefs: StateDefinition[] = [],\n              private stateDefinitionManager: StateDefinitionManager) {\n\n    this.stateDefinitionManager.add(stateDefs);\n  }\n\n  public static forChild(config: ReduxModuleChildConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: ReduxModule,\n      providers: [\n        {provide: StateDefToken, useValue: config.state || null, multi: true},\n        config.state ? config.state.provider : null,\n      ],\n    };\n  }\n\n  public static forRoot(config: ReduxModuleRootConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: ReduxRootModule,\n      providers: config.state ? [\n        {provide: ReduxStore, useFactory: config.storeFactory || ReduxModule.defaultStoreFactory},\n        {provide: StateDefToken, useValue: config.state || null, multi: true},\n        config.state ? config.state.provider : null,\n      ] : [\n        {provide: ReduxStore, useFactory: config.storeFactory || ReduxModule.defaultStoreFactory},\n        {provide: StateDefToken, useValue: config.state || null, multi: true},\n      ],\n    };\n  }\n\n  public static defaultStoreFactory(): Store<{}> {\n    return createStore(\n      ReduxModuleRootReducer.reduce,\n      {},\n      ReduxModule.defaultEnhancerFactory(),\n    );\n  }\n\n  public static defaultEnhancerFactory(): StoreEnhancer<{}> {\n    if (console && window[ '__REDUX_DEVTOOLS_EXTENSION__' ] && isDevMode()) {\n      return window[ '__REDUX_DEVTOOLS_EXTENSION__' ]();\n    }\n\n    return ReduxModule.noopEnhancer;\n  }\n\n  public static noopEnhancer(next: StoreEnhancerStoreCreator<{}>): StoreEnhancerStoreCreator<{}> {\n    return next;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/module.ts","import { ActionInterface } from '../../action/interface';\nimport { IRegisterStatePayload, Registry } from '../../registry';\nimport { ReduxRootState } from './state';\n\nexport class ReduxModuleRootReducer {\n\n  public static reduce(state: ReduxRootState, action: ActionInterface<{}>): ReduxRootState {\n    if (action.type === Registry.ACTION_REGISTER_STATE) {\n      return ReduxModuleRootReducer.reduceRegisterState(state, action as ActionInterface<IRegisterStatePayload>);\n    }\n\n    return ReduxModuleRootReducer.reduceByRegisteredReducers(state, action);\n  }\n\n  public static reduceRegisterState(state: ReduxRootState,\n                                    action: ActionInterface<IRegisterStatePayload>): ReduxRootState {\n    const {name, initialValue} = action.payload;\n\n    return Object.assign({}, state, {\n      [name]: initialValue,\n    });\n\n  }\n\n  public static reduceByRegisteredReducers(state: ReduxRootState,\n                                           action: ActionInterface<{}>): ReduxRootState {\n\n    const reducers = Registry.getReducerItemsByType(action.type);\n    return reducers.reduce((stateToReduce, reducerItem) => {\n      const {stateName, reducer} = reducerItem;\n\n      return Object.assign({}, stateToReduce, {\n        [stateName]: reducer(stateToReduce[ stateName ], action),\n      });\n\n    }, state);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/module/root/reducer.ts","import {\n  ReduxActionDispatcher,\n  ReduxActionFunction,\n  ReduxStateDecorator,\n  ReduxStateInterface\n} from '@harmowatch/redux-decorators';\nimport { Action, Reducer, Store } from 'redux';\nimport 'rxjs/add/operator/toPromise';\nimport { AsyncSubject } from 'rxjs/AsyncSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { ActionInterface } from './action/interface';\n\nexport class RegistryReducerItem {\n  stateName: string;\n  reducer: Reducer<{}>;\n  type: ReduxActionFunction<{}>;\n}\n\nexport interface IRegisterStatePayload {\n  initialValue: {};\n  name: string;\n}\n\nexport class Registry {\n\n  public static readonly ACTION_REGISTER_STATE = `@harmowatch/ngx-redux-core/registerState`;\n\n  private static _store = new AsyncSubject<Store<{}>>();\n  private static _reducers: RegistryReducerItem[] = [];\n\n  public static reset() {\n    Registry._store = new AsyncSubject<Store<{}>>();\n    Registry._reducers = [];\n  }\n\n  public static registerStore(store: Store<{}>) {\n    Registry._store.next(store);\n    Registry._store.complete();\n\n    ReduxActionDispatcher.dispatchedActions.subscribe(action => {\n      store.dispatch(action as Action);\n    });\n  }\n\n  public static registerReducer(stateName: string, types: ReduxActionFunction<{}>[], reducer: Reducer<{}>) {\n\n    if (Array.isArray(types)) {\n      types.forEach((type) => {\n        Registry._reducers.push({\n          reducer,\n          stateName,\n          type,\n        });\n      });\n    } else {\n      Registry._reducers.push({\n        reducer,\n        stateName,\n        type: types as ReduxActionFunction<{}>,\n      });\n    }\n\n  }\n\n  public static registerState(state: ReduxStateInterface<{}>) {\n    Registry.getStore().then((store) => {\n\n      const stateConfig = ReduxStateDecorator.get(state.constructor);\n      const initState = state.getInitialState();\n      let initStateToResolve = initState;\n\n      if (initState instanceof Observable) {\n        initStateToResolve = initState.toPromise();\n      }\n\n      Promise.resolve(initStateToResolve).then((initialState) => {\n        store.dispatch<ActionInterface<IRegisterStatePayload>>({\n          payload: {\n            initialValue: initialState,\n            name: stateConfig.name,\n          },\n          type: Registry.ACTION_REGISTER_STATE,\n        });\n      });\n\n    });\n  }\n\n  public static getReducerItemsByType(type: string): RegistryReducerItem[] {\n    return Registry._reducers\n      .filter(reducerItem => ReduxActionDispatcher.getType(reducerItem.type) === type);\n  }\n\n  public static getStore(): Promise<Store<{}>> {\n    return new Promise(Registry._store.subscribe.bind(Registry._store));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/registry.ts","import { Inject, Pipe, PipeTransform } from '@angular/core';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport { Observable } from 'rxjs/Observable';\nimport { ReduxSelectorCacheFactory } from '../selector/cache/selector-cache-factory';\nimport { StateDefinition } from '../state/definition';\nimport { StateDefToken } from '../state/definition/token';\n\n@Pipe({name: 'reduxSelect'})\nexport class ReduxSelectPipe implements PipeTransform {\n\n  private stateDef: StateDefinition;\n\n  constructor(@Inject(StateDefToken) stateDefs: StateDefinition[] = []) {\n    this.stateDef = stateDefs[ 0 ];\n  }\n\n  transform(selector: string): Observable<{}> {\n    return ReduxSelectorCacheFactory.getOrCreate(selector, this.stateDef.provider).distinctUntilChanged();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/select/pipe.ts","import { ReduxStateDecorator, ReduxStateType } from '@harmowatch/redux-decorators';\nimport 'rxjs/add/operator/map';\n\nimport { Observable } from 'rxjs/Observable';\nimport { ReduxRootState } from './module/root/state';\nimport { Registry } from './registry';\nimport { ReduxSelectorCacheFactory } from './selector/cache/selector-cache-factory';\n\nexport class ReduxSelector<T> extends Observable<T> {\n\n  private static readonly DELIMITER = '/';\n\n  constructor(selector = '/',\n              stateProvider?: ReduxStateType) {\n\n    super(observer => {\n      Registry.getStore().then(store => {\n        const next = () => observer.next(ReduxSelector.getValueByState(store.getState(), selector, stateProvider));\n        store.subscribe(() => next());\n        next(); // we need to trigger a initial value, otherwise we've to wait until the first state change\n      });\n    });\n\n    if (!ReduxSelectorCacheFactory.has(selector, stateProvider)) {\n      ReduxSelectorCacheFactory.set(this, selector, stateProvider);\n    }\n  }\n\n  public static create<T>(selector: string, stateProvider?: ReduxStateType): ReduxSelector<T> {\n    return new ReduxSelector(selector, stateProvider);\n  }\n\n  public static getAbsoluteSelector(selector: string, stateProvider?: ReduxStateType): string {\n    if (!selector.startsWith(ReduxSelector.DELIMITER)) {\n      if (!stateProvider) {\n        throw new Error('You need to provide a state provider, if you use relative selectors');\n      }\n\n      return `/${ReduxStateDecorator.get(stateProvider).name}/${selector}`;\n    }\n\n    return selector;\n  }\n\n  public static getValueByState<S>(state: ReduxRootState<S>, selector: string, stateProvider?: ReduxStateType): S {\n    return ReduxSelector.getAbsoluteSelector(selector, stateProvider).split(ReduxSelector.DELIMITER)\n      .filter(propertyKey => propertyKey !== '')\n      .reduce((previousValue, propertyKey) => {\n        if (!previousValue || !previousValue.hasOwnProperty(propertyKey)) {\n          return null;\n        }\n\n        return previousValue[ propertyKey ];\n      }, state as {});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/selector.ts","import { ReduxStateType } from '@harmowatch/redux-decorators';\nimport { ReduxSelector } from '../../selector';\n\nexport class ReduxSelectorCacheFactory {\n\n  private static selectors: {\n    [key: string]: ReduxSelector<{}>\n  } = {};\n\n  public static clear() {\n    ReduxSelectorCacheFactory.selectors = {};\n  }\n\n  public static getOrCreate<T>(selector: string, stateProvider?: ReduxStateType): ReduxSelector<T> {\n    if (ReduxSelectorCacheFactory.has(selector, stateProvider)) {\n      return ReduxSelectorCacheFactory.get(selector, stateProvider);\n    }\n\n    return new ReduxSelector(selector, stateProvider);\n  }\n\n  public static get<T>(selector: string, stateProvider?: ReduxStateType): ReduxSelector<T> {\n    const key = ReduxSelectorCacheFactory.getKey(selector, stateProvider);\n    return ReduxSelectorCacheFactory.selectors[ key ] as ReduxSelector<T>;\n  }\n\n  public static set(reduxSelector: ReduxSelector<{}>, selector: string, stateProvider?: ReduxStateType) {\n    const key = ReduxSelectorCacheFactory.getKey(selector, stateProvider);\n    ReduxSelectorCacheFactory.selectors[ key ] = reduxSelector;\n  }\n\n  public static has(selector: string, stateProvider?: ReduxStateType): boolean {\n    const key = ReduxSelectorCacheFactory.getKey(selector, stateProvider);\n    return !!ReduxSelectorCacheFactory.selectors[ key ];\n  }\n\n  private static getKey(selector: string, stateProvider?: ReduxStateType): string {\n    return ReduxSelector.getAbsoluteSelector(selector, stateProvider);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/selector/cache/selector-cache-factory.ts","import { Injectable, Injector } from '@angular/core';\nimport { ReduxReducerDecorator, ReduxStateDecorator, ReduxReducerType } from '@harmowatch/redux-decorators';\nimport { Registry } from '../../registry';\nimport { StateDefinition } from '../definition';\n\n@Injectable()\nexport class StateDefinitionManager {\n\n  private knownStateDefinitions: { [name: string]: StateDefinition } = {};\n\n  constructor(private injector: Injector) {\n  }\n\n  public add(stateDefs: StateDefinition[]) {\n    stateDefs\n      .filter(def => def != null)\n      .forEach(def => {\n        const {name} = ReduxStateDecorator.get(def.provider);\n\n        if (!this.knownStateDefinitions[ name ]) {\n          Registry.registerState(this.injector.get(def.provider));\n\n          if (Array.isArray(def.reducers)) {\n            this.registerReducers(name, def.reducers);\n          }\n\n          this.knownStateDefinitions[ name ] = def;\n        }\n      });\n  }\n\n  private registerReducers(stateName: string, reducers: ReduxReducerType[]) {\n    reducers.forEach(reducerClass => Object.values(reducerClass.prototype)\n      .forEach(reducerMethod => {\n        const type = ReduxReducerDecorator.get(reducerMethod);\n        Registry.registerReducer(stateName, Array.isArray(type) ? type : [ type ], reducerMethod);\n      })\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/state/definition/manager.ts","import { InjectionToken } from '@angular/core';\nimport { Store } from 'redux';\n\nexport class StateDefToken extends InjectionToken<Store<{}>> {\n\n  constructor() {\n    super('StateDefToken');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/state/definition/token.ts","import { InjectionToken } from '@angular/core';\nimport { Store } from 'redux';\n\nexport class ReduxStore extends InjectionToken<Store<{}>> {\n\n  constructor() {\n    super('ReduxStore');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/store/token.ts"],"sourceRoot":"webpack:///"}