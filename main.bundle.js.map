{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/environments/environment.ts","./src/example-app/app.component.css","./src/example-app/app.component.html","./src/example-app/app.component.ts","./src/example-app/app.module.ts","./src/harmowatch/ngx-redux-core/pipes/redux-select.pipe.ts","./src/harmowatch/ngx-redux-core/providers/redux-reducer.provider.ts","./src/harmowatch/ngx-redux-core/providers/redux-registry.ts","./src/harmowatch/ngx-redux-core/redux.module.ts","./src/harmowatch/ngx-redux-core/tokens/redux-state-definition.token.ts","./src/harmowatch/ngx-redux-core/tokens/redux-store.token.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./todo/todo.module\": [\n\t\t\"./src/example-app/todo/todo.module.ts\",\n\t\t\"todo.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/example-app/app.component.css\n// module id = ./src/example-app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/example-app/app.component.html\n// module id = ./src/example-app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent {\n  title = 'app';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/example-app/app.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ReduxModule } from '../harmowatch/ngx-redux-core/redux.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReduxModule.forRoot(),\n    RouterModule.forRoot([\n      {path: 'todo', loadChildren: './todo/todo.module#TodoModule'},\n      {path: '', redirectTo: 'todo', pathMatch: 'prefix'},\n    ], {useHash: true})\n  ],\n  exports: [\n    AppComponent,\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/example-app/app.module.ts","import 'rxjs/add/operator/distinctUntilChanged';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Inject, Injector, Pipe, PipeTransform } from '@angular/core';\n\nimport { ReduxStateProvider } from '../providers/redux-state.provider';\nimport { ReduxStateDefinitionToken } from '../tokens/redux-state-definition.token';\nimport { ReduxStateDefinition } from '../interfaces/redux-state-definition.interface';\n\n@Pipe({name: 'reduxSelect'})\nexport class ReduxSelectPipe implements PipeTransform {\n\n  private provider: ReduxStateProvider;\n\n  constructor(@Inject(ReduxStateDefinitionToken) stateDefs: ReduxStateDefinition[] = [], injector: Injector) {\n    this.provider = injector.get(stateDefs[ 0 ].provider) as ReduxStateProvider;\n  }\n\n  transform(selector: string): Observable<{}> {\n    return this.provider.select(selector);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/harmowatch/ngx-redux-core/pipes/redux-select.pipe.ts","import { Injectable } from '@angular/core';\n\nimport { ReduxStateProvider } from './redux-state.provider';\nimport { IRegisterStatePayload, ReduxRegistry } from './redux-registry';\nimport { ReduxRootState } from '../interfaces/redux-root-state.interface';\nimport { ReduxActionWithPayload } from '../interfaces/redux-action.interface';\n\n\n@Injectable()\nexport class ReduxReducerProvider {\n\n  private stateProviders: {\n    [name: string]: ReduxStateProvider,\n  } = {};\n\n  public addStateProvider(provider: ReduxStateProvider) {\n    if (!this.stateProviders[ provider.name ]) {\n      ReduxRegistry.registerState(provider);\n      this.stateProviders[ provider.name ] = provider;\n    }\n  }\n\n  public reduce(rootState: ReduxRootState, action: ReduxActionWithPayload<any>): ReduxRootState {\n\n    if (action.type === ReduxRegistry.ACTION_REGISTER_STATE) {\n      const regAction = (action as {} as ReduxActionWithPayload<IRegisterStatePayload>);\n\n      return {\n        ...rootState,\n        [ regAction.payload.name ]: regAction.payload.initialValue,\n      };\n    }\n\n    return Object.values(this.stateProviders).reduce((stateToReduce, provider) => {\n      return Object.assign({}, stateToReduce, {\n        [ provider.name ]: provider.reduce(stateToReduce[ provider.name ], action),\n      });\n    }, rootState);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/harmowatch/ngx-redux-core/providers/redux-reducer.provider.ts","import 'rxjs/add/operator/toPromise';\n\nimport { ReduxActionDispatcher, ReduxStateDecorator } from '@harmowatch/redux-decorators';\n\nimport { Store } from 'redux';\nimport { AsyncSubject } from 'rxjs/AsyncSubject';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Inject, Injectable } from '@angular/core';\nimport { ReduxStore } from '../tokens/redux-store.token';\nimport { ReduxActionWithPayload } from '../interfaces/redux-action.interface';\nimport { ReduxStateProvider } from './redux-state.provider';\n\nexport interface IRegisterStatePayload {\n  initialValue: {};\n  name: string;\n}\n\n@Injectable()\nexport class ReduxRegistry {\n\n  public static readonly ACTION_REGISTER_STATE = `@harmowatch/ngx-redux-core/registerState`;\n\n  private static _store = new AsyncSubject<Store<{}>>();\n\n  constructor(@Inject(ReduxStore) store: Store<{}> = null) {\n    ReduxRegistry.reset();\n    ReduxRegistry.registerStore(store);\n  }\n\n  public static reset() {\n    ReduxRegistry._store = new AsyncSubject<Store<{}>>();\n  }\n\n  public static registerStore(store: Store<{}>) {\n    ReduxRegistry.reset();\n    ReduxRegistry._store.next(store);\n    ReduxRegistry._store.complete();\n\n    ReduxActionDispatcher.dispatchedActions.subscribe(action => {\n\n      const reduxAction: ReduxActionWithPayload = {\n        type: action.type,\n        payload: action.payload,\n      };\n\n      store.dispatch(reduxAction);\n\n      if (action.onDispatchSuccess) {\n        action.onDispatchSuccess();\n      }\n\n    });\n  }\n\n  public static registerState(state: ReduxStateProvider) {\n    ReduxRegistry.getStore().then((store) => {\n\n      const stateConfig = ReduxStateDecorator.get(state.constructor);\n      const initialState = state.getInitialState();\n\n      Promise\n        .resolve(initialState instanceof Observable ? initialState.toPromise() : initialState)\n        .then(initialValue => {\n          store.dispatch<ReduxActionWithPayload<IRegisterStatePayload>>({\n            payload: {\n              initialValue,\n              name: stateConfig.name,\n            },\n            type: ReduxRegistry.ACTION_REGISTER_STATE,\n          });\n        });\n\n    });\n  }\n\n  public static getStore(): Promise<Store<{}>> {\n    return new Promise(ReduxRegistry._store.subscribe.bind(ReduxRegistry._store));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/harmowatch/ngx-redux-core/providers/redux-registry.ts","import { createStore, Store, StoreEnhancer, StoreEnhancerStoreCreator } from 'redux';\n\nimport { CommonModule } from '@angular/common';\nimport { Inject, Injector, isDevMode, ModuleWithProviders, NgModule, Optional } from '@angular/core';\nimport { ReduxSelectPipe } from './pipes/redux-select.pipe';\nimport { ReduxReducerProvider } from './providers/redux-reducer.provider';\nimport { ReduxStateDefinitionToken } from './tokens/redux-state-definition.token';\nimport { ReduxStateDefinition } from './interfaces/redux-state-definition.interface';\nimport { ReduxRegistry } from './providers/redux-registry';\nimport { ReduxModuleChildConfig } from './interfaces/redux-child-module-config.interface';\nimport { ReduxModuleRootConfig } from './interfaces/redux-root-module-config.interface';\nimport { ReduxStore } from './tokens/redux-store.token';\n\n@NgModule({\n  declarations: [\n    ReduxSelectPipe,\n  ],\n  exports: [\n    ReduxSelectPipe,\n  ],\n  imports: [\n    CommonModule,\n  ],\n})\nexport class ReduxModule {\n\n  constructor(injector: Injector,\n              reducer: ReduxReducerProvider,\n              @Optional() @Inject(ReduxStateDefinitionToken) stateDefs: ReduxStateDefinition[] = []) {\n\n    injector.get(ReduxRegistry); // just make sure the provider is instantiated\n\n    if (Array.isArray(stateDefs)) {\n      stateDefs\n        .filter(def => def && def.provider)\n        .map(def => injector.get(def.provider))\n        .forEach(provider => reducer.addStateProvider(provider));\n    }\n\n  }\n\n  public static forChild<S = {}>(config: ReduxModuleChildConfig<S> = {}): ModuleWithProviders {\n    return {\n      ngModule: ReduxModule,\n      providers: [\n        {provide: ReduxStateDefinitionToken, useValue: config.state || null, multi: true},\n      ],\n    };\n  }\n\n  public static forRoot<S = {}>(config: ReduxModuleRootConfig<S> = {}): ModuleWithProviders {\n    return {\n      ngModule: ReduxModule,\n      providers: [\n        ReduxReducerProvider,\n        ReduxRegistry,\n        {\n          provide: ReduxStore,\n          useFactory: config.storeFactory || ReduxModule.defaultStoreFactory,\n          deps: [ ReduxReducerProvider ]\n        },\n        {provide: ReduxStateDefinitionToken, useValue: config.state || null, multi: true},\n      ],\n    };\n  }\n\n  public static defaultStoreFactory(reducer: ReduxReducerProvider, devMode = isDevMode()): Store<{}> {\n    return createStore(\n      reducer.reduce.bind(reducer),\n      {},\n      ReduxModule.defaultEnhancerFactory(devMode),\n    );\n  }\n\n  public static defaultEnhancerFactory(devMode: boolean): StoreEnhancer<{}> {\n    if (window[ '__REDUX_DEVTOOLS_EXTENSION__' ] && devMode) {\n      return window[ '__REDUX_DEVTOOLS_EXTENSION__' ]();\n    }\n\n    return ReduxModule.noopEnhancer;\n  }\n\n  public static noopEnhancer(next: StoreEnhancerStoreCreator<{}>): StoreEnhancerStoreCreator<{}> {\n    return next;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/harmowatch/ngx-redux-core/redux.module.ts","import { Store } from 'redux';\nimport { InjectionToken } from '@angular/core';\n\nexport class ReduxStateDefinitionToken extends InjectionToken<Store<{}>> {\n\n  constructor() {\n    super('ReduxStateDefinitionToken');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/harmowatch/ngx-redux-core/tokens/redux-state-definition.token.ts","import { InjectionToken } from '@angular/core';\nimport { Store } from 'redux';\n\nexport class ReduxStore extends InjectionToken<Store<{}>> {\n\n  constructor() {\n    super('ReduxStore');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/harmowatch/ngx-redux-core/tokens/redux-store.token.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './example-app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}