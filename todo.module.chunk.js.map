{"version":3,"sources":["/home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/list/todo-list.component.html","/home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/list/todo-list.component.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/state/todo-state.provider.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/state/todo-state.reducer.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/todo.module.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/action/interface.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/action/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/module/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/reducer/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/select/decorator.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/select/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/state/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/state/selector.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/store/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/testing/module.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/testing/public_api.ts","/home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/testing/store.ts","/home/travis/build/HarmoWatch/ngx-redux-core/node_modules/rxjs/_esm5/add/operator/takeWhile.js","/home/travis/build/HarmoWatch/ngx-redux-core/node_modules/rxjs/_esm5/operator/takeWhile.js","/home/travis/build/HarmoWatch/ngx-redux-core/node_modules/rxjs/_esm5/operators/takeWhile.js"],"names":[],"mappings":"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","file":"todo.module.chunk.js","sourcesContent":["module.exports = \"\\n<input #todo type=\\\"text\\\" />\\n<button (click)=\\\"add(todo.value)\\\">Add todo</button>\\n\\n<ul class=\\\"todo-list\\\">\\n  <li *ngFor=\\\"let todo of ('items' | reduxSelect | async)\\\">{{todo}}</li>\\n</ul>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/list/todo-list.component.html\n// module id = ../../../../../src/app/todo/list/todo-list.component.html\n// module chunks = todo.module","import { Component } from '@angular/core';\nimport { ReduxAction } from '../../../ngx-redux/action/public_api';\n\n@Component({\n  templateUrl: './todo-list.component.html',\n})\nexport class TodoListComponent {\n\n  @ReduxAction()\n  add(todo: string) {\n    return todo;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/list/todo-list.component.ts","import { ReduxStateInterface } from '@harmowatch/redux-decorators/state/redux-state.interface';\nimport { ReduxState } from '../../../ngx-redux/public_api';\n\nexport interface TodoState {\n  items: string[];\n}\n\n@ReduxState({name: 'todo'})\nexport class TodoStateProvider implements ReduxStateInterface<TodoState> {\n\n  getInitialState(): Promise<TodoState> {\n    return Promise.resolve({\n      items: []\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/state/todo-state.provider.ts","import { ActionInterface } from '../../../ngx-redux/action/interface';\nimport { ReduxReducer } from '../../../ngx-redux/public_api';\nimport { TodoListComponent } from '../list/todo-list.component';\nimport { TodoState } from './todo-state.provider';\n\nexport class TodoStateReducer {\n\n  @ReduxReducer([\n    TodoListComponent.prototype.add,\n  ])\n  addTodo(state: TodoState, action: ActionInterface<string>): TodoState {\n    return {\n      ...state,\n      items: state.items.concat(action.payload || '- null -'),\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/state/todo-state.reducer.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ReduxModule } from '../../ngx-redux/module';\nimport { TodoListComponent } from './list/todo-list.component';\nimport { TodoStateProvider } from './state/todo-state.provider';\nimport { TodoStateReducer } from './state/todo-state.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReduxModule.forChild({\n      state: {\n        provider: TodoStateProvider,\n        reducers: [ TodoStateReducer ],\n      }\n    }),\n    RouterModule.forChild([\n      {path: '', component: TodoListComponent},\n    ]),\n  ],\n  declarations: [TodoListComponent],\n})\nexport class TodoModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/app/todo/todo.module.ts","// interface doesn't work @see https://github.com/angular/angular-cli/issues/2034#issuecomment-302666897 :/\nexport class ActionInterface<P = void> {\n  type: string;\n  payload?: P;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/action/interface.ts","import { ReduxActionContextDecorator, ReduxActionDecorator } from '@harmowatch/redux-decorators';\n\nexport const ReduxAction = ReduxActionDecorator.forMethod;\nexport const ReduxActionContext = ReduxActionContextDecorator.forClass;\n\nexport * from './interface';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/action/public_api.ts","export * from './child/config';\nexport * from './root/config';\nexport * from './root/reducer';\nexport * from './root/state';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/module/public_api.ts","export * from './action/public_api';\nexport * from './module/public_api';\nexport * from './reducer/public_api';\nexport * from './select/public_api';\nexport * from './state/public_api';\nexport * from './store/public_api';\nexport * from './testing/public_api';\nexport * from './selector';\nexport * from './selector/cache/selector-cache-factory';\nexport * from './module';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/public_api.ts","import { ReduxReducerDecorator } from '@harmowatch/redux-decorators';\n\nexport const ReduxReducer = ReduxReducerDecorator.forMethod;\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/reducer/public_api.ts","import 'rxjs/add/operator/distinctUntilChanged';\n\nimport { ReduxStateType } from '@harmowatch/redux-decorators';\nimport { Observable } from 'rxjs/Observable';\nimport { ReduxSelector } from '../selector';\n\nexport function ReduxSelect<S = {}>(expression: string,\n                                    context?: ReduxStateType): PropertyDecorator {\n  return (target: {}, propertyKey: string) => {\n\n    let observable: Observable<S>;\n\n    Object.defineProperty(target, propertyKey, {\n      configurable: true,\n      enumerable: true,\n      get: () => { // use a getter to be lazy\n        if (!observable) {\n          observable = new ReduxSelector<S>(expression, context).distinctUntilChanged();\n        }\n\n        return observable;\n      },\n    });\n\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/select/decorator.ts","export * from './pipe';\nexport {ReduxSelect as ReduxSelect} from './decorator';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/select/public_api.ts","import { ReduxStateDecorator } from '@harmowatch/redux-decorators';\n\nexport * from './constructor';\nexport * from './definition';\nexport * from './selector';\n\nexport const ReduxState = ReduxStateDecorator.forClass;\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/state/public_api.ts","import 'rxjs/add/operator/map';\n\nimport { ReduxStateType } from '@harmowatch/redux-decorators';\nimport { Observable } from 'rxjs/Observable';\nimport { ReduxSelector } from '../selector';\n\n/**\n * @deprecated Use \"ReduxSelector\" instead\n */\nexport class ReduxStateSelector<S = {}> {\n\n  private selector: ReduxSelector<S>;\n\n  constructor(expression: string,\n              context?: ReduxStateType) {\n\n    this.selector = new ReduxSelector<S>(expression, context);\n  }\n\n  public asObservable(): Observable<S> {\n    return this.selector;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/state/selector.ts","export * from './token';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/store/public_api.ts","import { CommonModule } from '@angular/common';\nimport { Inject, ModuleWithProviders, NgModule, Optional } from '@angular/core';\nimport { ReduxCommonModule } from '../common/module';\nimport { Registry } from '../registry';\nimport { ReduxSelectorCacheFactory } from '../selector/cache/selector-cache-factory';\nimport { ReduxTestingStore } from './store';\nimport { ReduxModuleRootConfig } from '../module/root/config';\nimport { StateDefToken } from '../state/definition/token';\nimport { Store } from 'redux';\n\n@NgModule({\n  exports: [\n    ReduxCommonModule,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    ReduxTestingStore,\n  ],\n})\nexport class ReduxTestingModule {\n\n  constructor(@Optional() @Inject(ReduxTestingStore) store: Store<{}> = null) {\n    ReduxSelectorCacheFactory.clear();\n\n    if (store) {\n      Registry.reset();\n      Registry.registerStore(store);\n    }\n  }\n\n  public static forRoot(config: ReduxModuleRootConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: ReduxTestingModule,\n      providers: config.state ? [\n        {provide: ReduxTestingStore, useFactory: config.storeFactory || ReduxTestingModule.defaultStoreFactory},\n        {provide: StateDefToken, useValue: config.state || null, multi: true},\n        config.state ? config.state.provider : null,\n      ] : [\n        {provide: ReduxTestingStore, useFactory: config.storeFactory || ReduxTestingModule.defaultStoreFactory},\n        {provide: StateDefToken, useValue: config.state || null, multi: true},\n      ],\n    };\n  }\n\n  public static defaultStoreFactory(): Store<{}> {\n    return new ReduxTestingStore();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/testing/module.ts","export * from './module';\nexport * from './store';\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/testing/public_api.ts","import { Injectable } from '@angular/core';\nimport { ReduxStateDecorator } from '@harmowatch/redux-decorators';\nimport { Action, Store, Unsubscribe } from 'redux';\nimport 'rxjs/add/operator/takeWhile';\nimport 'rxjs/add/operator/toPromise';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ReduxRootState } from '../module/root/state';\nimport { StateConstructor } from '../state/constructor';\n\n@Injectable()\nexport class ReduxTestingStore implements Store<{}> {\n\n  private state = new BehaviorSubject(null);\n\n  public setState<S>(state: StateConstructor, value: S): Promise<ReduxRootState> {\n    const {name} = ReduxStateDecorator.get(state);\n\n    const nextState = Object.assign({}, this.state.getValue(), {\n      [name]: value,\n    });\n\n    this.state.next(nextState);\n\n    return this.state\n      .takeWhile(currentState => currentState !== nextState)\n      .toPromise().then(() => this.state.getValue());\n  }\n\n  public getState(): {} {\n    return this.state.getValue();\n  }\n\n  public subscribe(listener: () => void): Unsubscribe {\n    return this.state.subscribe.call(this.state, listener);\n  }\n\n  public replaceReducer() {\n  }\n\n  public dispatch<T extends Action>(action: T): T {\n    return action;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/travis/build/HarmoWatch/ngx-redux-core/src/ngx-redux/testing/store.ts","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_takeWhile PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { takeWhile } from '../../operator/takeWhile';\nObservable.prototype.takeWhile = takeWhile;\n//# sourceMappingURL=takeWhile.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/node_modules/rxjs/_esm5/add/operator/takeWhile.js\n// module id = ../../../../rxjs/_esm5/add/operator/takeWhile.js\n// module chunks = todo.module","/** PURE_IMPORTS_START .._operators_takeWhile PURE_IMPORTS_END */\nimport { takeWhile as higherOrder } from '../operators/takeWhile';\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile(predicate) {\n    return higherOrder(predicate)(this);\n}\n//# sourceMappingURL=takeWhile.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/node_modules/rxjs/_esm5/operator/takeWhile.js\n// module id = ../../../../rxjs/_esm5/operator/takeWhile.js\n// module chunks = todo.module","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile(predicate) {\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\n}\nvar TakeWhileOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeWhile.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/travis/build/HarmoWatch/ngx-redux-core/node_modules/rxjs/_esm5/operators/takeWhile.js\n// module id = ../../../../rxjs/_esm5/operators/takeWhile.js\n// module chunks = todo.module"],"sourceRoot":"webpack:///"}